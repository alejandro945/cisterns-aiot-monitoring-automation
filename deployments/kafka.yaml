apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka
          ports:
            - containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_NUM_PARTITIONS
              value: "1"
            - name: KAFKA_COMPRESSION_TYPE
              value: "gzip"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-rest-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-rest-proxy
      namespace: broker
  template:
    metadata:
      labels:
        app: kafka-rest-proxy
    spec:
      containers:
        - name: kafka-rest-proxy
          image: confluentinc/cp-kafka-rest:latest
          ports:
            - containerPort: 8082
          env:
            - name: KAFKA_REST_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_REST_LISTENERS
              value: "http://0.0.0.0:8082/"
            - name: KAFKA_REST_HOST_NAME
              value: "kafka-rest-proxy"
            - name: KAFKA_REST_BOOTSTRAP_SERVERS
              value: "kafka:9092"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-topics-ui
  namespace: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-topics-ui
  template:
    metadata:
      labels:
        app: kafka-topics-ui
    spec:
      containers:
        - name: kafka-topics-ui
          image: landoop/kafka-topics-ui:latest
          ports:
            - containerPort: 8000
          env:
            - name: KAFKA_REST_PROXY_URL
              value: "http://kafka-rest-proxy:8082/"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: confluentinc/cp-kafka-connect:latest
          ports:
            - containerPort: 8083
          env:
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "kafka:9092"
            - name: CONNECT_GROUP_ID
              value: "kafka-connect-group"
            - name: CONNECT_CONFIG_STORAGE_TOPIC
              value: "kafka-connect-meta-configs"
            - name: CONNECT_OFFSET_STORAGE_TOPIC
              value: "kafka-connect-meta-offsets"
            - name: CONNECT_STATUS_STORAGE_TOPIC
              value: "kafka-connect-meta-status"
            - name: CONNECT_KEY_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECT_VALUE_CONVERTER
              value: "org.apache.kafka.connect.json.JsonConverter"
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: "kafka-connect"
            - name: CONNECT_REST_PORT
              value: "8083"
            - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
              value: "1"
            - name: CONNECT_PLUGIN_PATH
              value: "/usr/share/java,/data/connectors/"
            - name: CONNECT_LOG4J_ROOT_LOGLEVEL
              value: "INFO"
          volumeMounts:
            - name: kafka-connect-data
              mountPath: /data

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect-ui
  namespace: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect-ui
  template:
    metadata:
      labels:
        app: kafka-connect-ui
    spec:
      containers:
        - name: kafka-connect-ui
          image: landoop/kafka-connect-ui:latest
          ports:
            - containerPort: 8000
          env:
            - name: CONNECT_URL
              value: "http://kafka-connect:8083/"